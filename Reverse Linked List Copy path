### Aim: To reverse a given singly linked list and return the modified linked list.

### Objective: 
    -To understand the concept of linked list reversal.
    -To efficiently traverse and modify a linked list.
    -To update node pointers to achieve the reversed order.
    -To implement an in-place reversal algorithm without using extra space.

### Code:
class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        ListNode* node = nullptr;

        while (head != nullptr) {
            ListNode* temp = head->next;
            head->next = node;
            node = head;
            head = temp;
        }

        return node;        
    }
};
